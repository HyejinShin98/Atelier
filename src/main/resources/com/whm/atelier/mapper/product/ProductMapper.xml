<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whm.atelier.mapper.product.ProductMapper">
		
	<sql id="selectProductInfo">
		SELECT 
			p.product_no, 
			p.store_no, 
			p.product_category_no, 
			p.product_name, 
			p.product_price, 
			p.product_description, 
			p.product_post_price, 
			p.product_status_yn, 
			p.product_date,
			pcs.product_confirm_status_type,
			pi.pi_path,
			pc.product_category_name, 
			pc.product_category_image_path, 
			s.customer_no, 
			s.store_tier_no, 
			s.store_name, 
			s.store_profile, 
			s.store_img, 
			s.store_phone, 
			(SELECT count(*) FROM consumer_wish WHERE product_no = p.product_no) wish_count,
			(SELECT count(*) FROM REVIEW WHERE product_no = p.PRODUCT_NO) review_count,
			(SELECT ROUND(AVG(r.REVIEW_STAR), 1) FROM REVIEW r WHERE r.PRODUCT_NO = p.PRODUCT_NO ) AS star_avg
	</sql>
	
	<select id="selectProductList" resultType="map">
		<include refid="selectProductInfo"></include>
		<if test="'hot'.equals(condition)">
			, (SELECT count(*) FROM ORDER_TB ot2 WHERE ot2.product_no = p.product_no) sales_count
		</if>
		FROM PRODUCT p , PRODUCT_IMAGE pi, PRODUCT_CATEGORY pc , PRODUCT_CONFIRM_STATUS pcs , STORE s , STORE_TIER st
		WHERE 1=1
		AND p.PRODUCT_NO = pi.product_no
		AND p.PRODUCT_CATEGORY_NO = pc.PRODUCT_CATEGORY_NO 
		AND p.PRODUCT_CONFIRM_STATUS_NO = pcs.PRODUCT_CONFIRM_STATUS_NO
		AND p.STORE_NO = s.STORE_NO 
		AND s.STORE_TIER_NO = st.STORE_TIER_NO
		AND pi.pi_representive_yn = 'y'
		AND p.product_status_yn = 'y'
		<if test="confirm_status_no != null">
			AND p.PRODUCT_CONFIRM_STATUS_NO = #{confirm_status_no}
		</if>
		<if test="category_no != null">
			AND p.PRODUCT_CATEGORY_NO = #{category_no}
		</if>
		<if test="searchWord != null">
			AND (p.PRODUCT_NAME LIKE '%'||#{searchWord}||'%' OR s.STORE_NAME LIKE '%'||#{searchWord}||'%')
		</if>
		
		<choose>
			<when test="'hot'.equals(condition)">
				ORDER BY sales_count DESC
			</when>
			<when test="'realtime'.equals(condition)">
				ORDER BY p.product_date DESC
			</when>
		</choose>
	</select>
	
	<!-- 상품 detail 페이지 -->
	<select id="selectProductOne" resultType="map">
		<include refid="selectProductInfo"></include>
		FROM PRODUCT p , PRODUCT_IMAGE pi, PRODUCT_CATEGORY pc , PRODUCT_CONFIRM_STATUS pcs , STORE s , STORE_TIER st
		WHERE 1=1
		AND p.PRODUCT_NO = pi.product_no
		AND p.PRODUCT_CATEGORY_NO = pc.PRODUCT_CATEGORY_NO 
		AND p.PRODUCT_CONFIRM_STATUS_NO = pcs.PRODUCT_CONFIRM_STATUS_NO
		AND p.STORE_NO = s.STORE_NO 
		AND s.STORE_TIER_NO = st.STORE_TIER_NO
		AND pi.pi_representive_yn = 'y'
		AND p.PRODUCT_NO = #{product_no}
	</select>

	<!-- 상품 이미지 리스트 조회 -->
	<select id="selectProductImgList" resultType="com.whm.atelier.vo.ProductImage">
		SELECT * FROM PRODUCT_IMAGE WHERE product_no = #{product_no} ORDER BY PI_REPRESENTIVE_YN DESC
	</select>
	
	
	<!-- 상품 리뷰 조회 -->
	<select id="selectProductReviewList" resultType="map">
		SELECT 
			r.REVIEW_NO , r.CONSUMER_NO, c.CONSUMER_NICKNAME , r.PRODUCT_NO, r.STORE_NO , r.REVIEW_STAR , r.REVIEW_WRITEDATE , r.REVIEW_IMG_PATH, r.REVIEW_CONTENT
		FROM REVIEW r, CONSUMER c
		WHERE 1=1
		AND r.CONSUMER_NO = c.CONSUMER_NO 
		AND r.product_no = #{product_no}
	</select>
	
	<!-- 상품 문의 조회 -->
	<select id="selectProductAskList" resultType="map">
		SELECT 
			pa.PRODUCT_ASK_NO , pa.PRODUCT_NO , pa.CONSUMER_NO , pa.PRODUCT_ASK_CONTENT, pa.PRODUCT_ASK_WRITEDATE , pa.product_ask_comment_content, 
			pa.product_ask_comment_writedate, p.PRODUCT_NAME , s.STORE_NAME , s.STORE_IMG , s.STORE_PROFILE , s.STORE_NO , c.CONSUMER_NICKNAME
		FROM 
		PRODUCT_ASK pa , PRODUCT p , STORE s , CONSUMER c 
		WHERE 1=1
		AND pa.PRODUCT_NO = p.PRODUCT_NO 
		AND p.STORE_NO = s.STORE_NO
		AND pa.CONSUMER_NO = c.CONSUMER_NO
		AND pa.PRODUCT_NO = #{product_no}
	</select>
	
	<!-- 상품페이지의 상점 정보 -->
	<select id="selectStoreInfoByNo" resultType="map">
		SELECT 
			s.STORE_NO , s.CUSTOMER_NO, s.STORE_TIER_NO , s.STORE_NAME , s.STORE_IMG , s.STORE_PHONE , s.STORE_PROFILE , s.STORE_TOTAL_SALES_AMOUNT , s.STORE_DATE,
			(SELECT COUNT(*) FROM consumer_wish cw, PRODUCT p WHERE p.PRODUCT_NO = cw.product_no AND p.STORE_NO = s.STORE_NO) AS wish_cnt,
			(SELECT COUNT(*) FROM PRODUCT p2 WHERE p2.STORE_NO = s.STORE_NO ) AS product_cnt,
			(SELECT ROUND(AVG(r.review_star)) FROM PRODUCT p3, REVIEW r WHERE p3.PRODUCT_NO = r.PRODUCT_NO AND p3.STORE_NO = s.STORE_NO) AS star_avg,
			(SELECT COUNT(*) FROM ORDER_TB ot , PRODUCT p5 
				WHERE ot.PRODUCT_NO = p5.PRODUCT_NO AND p5.STORE_NO = s.STORE_NO AND ot.ORDER_COMPLETE_STATUS LIKE 'COM') AS order_cnt
		FROM STORE s
		WHERE s.store_no = 
		<choose>
			<when test="product_no != null">
				(SELECT p4.STORE_NO FROM PRODUCT p4 WHERE p4.PRODUCT_NO = #{product_no})
			</when>
			<otherwise>
				#{store_no}
			</otherwise>			
		</choose>
	</select>
	
	<!-- 스토어의 전체 상품 리스트 조회 -->
	<select id="selectStoreProductList" resultType="map">
		<include refid="selectProductInfo"></include>
		FROM PRODUCT p , PRODUCT_IMAGE pi, PRODUCT_CATEGORY pc , PRODUCT_CONFIRM_STATUS pcs , STORE s , STORE_TIER st
		WHERE 1=1
		AND p.PRODUCT_NO = pi.product_no
		AND p.PRODUCT_CATEGORY_NO = pc.PRODUCT_CATEGORY_NO 
		AND p.PRODUCT_CONFIRM_STATUS_NO = pcs.PRODUCT_CONFIRM_STATUS_NO
		AND p.STORE_NO = s.STORE_NO 
		AND s.STORE_TIER_NO = st.STORE_TIER_NO
		AND pi.pi_representive_yn = 'y'
		AND p.product_status_yn = 'y'
		<if test="confirm_status_no != null">
			AND p.PRODUCT_CONFIRM_STATUS_NO = #{confirm_status_no}
		</if>
		AND p.STORE_NO = #{store_no}
		ORDER BY p.product_date DESC
	</select>
	
	<!-- 상품 찜 -->
	<insert id="addWish">
		INSERT INTO CONSUMER_WISH VALUES (consumer_wish_seq.nextval, #{consumer_no}, #{product_no})
	</insert>
	
	<!-- 찜 삭제 -->
	<delete id="removeWish">
		DELETE FROM CONSUMER_WISH WHERE CONSUMER_WISH_NO = #{consumer_wish_no}
	</delete>
	
	<!-- 특정 상품 위시리스트에서 조회 -->
	<select id="selectCountWishPdByConsumerNo" resultType="com.whm.atelier.vo.ConsumerWish">	
		SELECT * FROM CONSUMER_WISH WHERE CONSUMER_NO = #{consumer_no} AND PRODUCT_NO = #{product_no}
	</select>
	
	<!-- 상품 찜목록 조회 -->
	<select id="selectWishPdInfoList" resultType="map">
		<include refid="selectProductInfo"></include>
			FROM PRODUCT p , PRODUCT_IMAGE pi, PRODUCT_CATEGORY pc , PRODUCT_CONFIRM_STATUS pcs , STORE s , STORE_TIER st, CONSUMER c , CONSUMER_WISH cw
			WHERE 1=1
			AND c.CONSUMER_NO = cw.consumer_no
			AND cw.product_no = p.PRODUCT_NO 
			AND p.PRODUCT_NO = pi.product_no
			AND p.PRODUCT_CATEGORY_NO = pc.PRODUCT_CATEGORY_NO 
			AND p.PRODUCT_CONFIRM_STATUS_NO = pcs.PRODUCT_CONFIRM_STATUS_NO
			AND p.STORE_NO = s.STORE_NO 
			AND s.STORE_TIER_NO = st.STORE_TIER_NO
			AND pi.pi_representive_yn = 'y'
			<if test="confirm_status_no != null">
				AND p.PRODUCT_CONFIRM_STATUS_NO = #{confirm_status_no}
			</if>
			AND cw.CONSUMER_NO = #{consumer_no}
	</select>
	
	<!-- 상품 카테고리 출력 -->
	<select id="selectProductCategory" resultType="com.whm.atelier.vo.ProductCategory" parameterType="map">
		SELECT * FROM PRODUCT_CATEGORY
		WHERE 1=1
		<if test="product_category_no != null">
			AND product_category_no = #{product_category_no}
		</if>
	</select>
	
	 <!-- 검색어 로그 추가 -->
	 <insert id="addSearchLog">
	 	INSERT INTO product_search_log values(
			product_search_log_seq.nextval,
			#{consumer_no},
			#{product_search_keyword},
			SYSDATE,
			'y'
		)
	 </insert>

	<!-- 인기 검색어 순 출력 -->
	<select id="selectPopularSearchWord" resultType="string">
		SELECT * FROM (
			SELECT PRODUCT_SEARCH_KEYWORD
			FROM PRODUCT_SEARCH_LOG
			GROUP BY PRODUCT_SEARCH_KEYWORD
			ORDER BY COUNT(*) DESC
		) 
		<![CDATA[
			WHERE ROWNUM <= 10
		]]>
		
	</select>
	
	<!-- 내 최근 검색어 출력 -->
	<select id="selectMyRecentSearchWord" resultType="com.whm.atelier.vo.ProductSearchLog">
		SELECT a.* FROM (
			SELECT * 
			FROM PRODUCT_SEARCH_LOG 
			WHERE consumer_no = #{consumer_no}
			AND product_search_show_yn = 'y' 
			ORDER BY product_search_date DESC
		) a
		<![CDATA[
			WHERE ROWNUM <= 9
		]]>
	</select>
	
	<select id="selectMyAllSearchLog" resultType="com.whm.atelier.vo.ProductSearchLog">
		SELECT * FROM PRODUCT_SEARCH_LOG WHERE consumer_no = #{consumer_no} and product_search_show_yn = 'y'
	</select>
	
	<!-- 최근 검색 기록 삭제(미표시) -->
	<update id="deleteMySearchLog">
		UPDATE PRODUCT_SEARCH_LOG
		SET product_search_show_yn = 'n'
		WHERE product_search_no = #{product_search_no}
	</update>
	
	<!-- 최근 검색기록 전체 삭제 -->
	<update id="deleteMyAllSearchLog">
		UPDATE PRODUCT_SEARCH_LOG
		SET product_search_show_yn = 'n'
		WHERE CONSUMER_NO = #{consumer_no}
	</update>
	
	<!-- 상점별 모든 후기 조회 -->
	<select id="selectReviewListByStoreNo" resultType="map">
		SELECT 
			r.REVIEW_NO , r.CONSUMER_NO, c.CONSUMER_NICKNAME , r.PRODUCT_NO, r.STORE_NO , r.REVIEW_STAR , r.REVIEW_WRITEDATE , r.REVIEW_IMG_PATH, r.REVIEW_CONTENT
			, p.PRODUCT_NAME, pi.PI_PATH, s.STORE_NAME, p.PRODUCT_PRICE  
		FROM REVIEW r, CONSUMER c, PRODUCT p, PRODUCT_IMAGE pi, STORE s 
		WHERE 1=1
		AND r.CONSUMER_NO = c.CONSUMER_NO 
		AND r.PRODUCT_NO = p.PRODUCT_NO
		AND p.PRODUCT_NO = pi.PRODUCT_NO
		AND pi.pi_representive_yn = 'y'
		AND s.STORE_NO  = p.STORE_NO 
		AND r.STORE_NO = #{store_no}
		ORDER BY r.REVIEW_WRITEDATE DESC
	</select>
	
	

</mapper>
